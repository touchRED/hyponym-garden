var seed = "building";

var gifUrl = "http://api.giphy.com/v1/gifs/search?q=" + seed + "&api_key=8lARF0cgG0lY6ZMfZ6n2GEYcoHvXg4WX";
var wordnikKey = "47dccf8be44d27e33e000095fc00800d910779b868e19b1dc";
// var wordnik = "http://api.wordnik.com:80/v4/word.json/" + seed + "/relatedWords?useCanonical=false&relationshipTypes=synonym&limitPerRelationshipType=10&api_key=" + wordnikKey;

var words = [];
var imgs = [];
var imgIndex = 0;

var currentImgElement;
var currentP;

var nextImgs;
var nextWord;

function setup(){
  noCanvas();
  if(window.location.hash.length > 1){
    seed = window.location.hash.slice(1);
    gifUrl = "http://api.giphy.com/v1/gifs/search?q=" + seed + "&api_key=8lARF0cgG0lY6ZMfZ6n2GEYcoHvXg4WX";
  }
  loadJSON(gifUrl, function(giphy){
    currentImgElement = createImg(giphy.data[0].images.downsized.url);
    currentP = createInput(seed);
    console.log(currentP);
    currentP.changed(function(){
      currentP.elt.blur();
      seed = currentP.elt.value;
      console.log("seed:", seed);
      gifUrl = "http://api.giphy.com/v1/gifs/search?q=" + seed + "&api_key=8lARF0cgG0lY6ZMfZ6n2GEYcoHvXg4WX";
      imgs = [];
      words = [];
      imgIndex = 0;
      loadJSON(gifUrl, function(giphy){
        if(giphy.data){
          currentImgElement.elt.src = giphy.data[0].images.downsized.url;
          words.push(seed);
          imgs.push(giphy.data)
          generateWord(seed, "synonym");
        }else{
          console.log("we failed");
        }
      });
    });
    words.push(seed);
    imgs.push(giphy.data)
    generateWord(seed, "synonym");
  });
}

function generateGiphyFunction(type){
  return function(giphy){
    if(giphy.data.length > 0){
      nextImgs = giphy.data
    }else{
      generateWord(words[words.length - 1], type);
    }
  }
}


/*

  TODO:

  - static during loading


*/


function generateWordnikLink(word, type){
  return "http://api.wordnik.com:80/v4/word.json/" + word + "/relatedWords?useCanonical=false&relationshipTypes=" + type + "&limitPerRelationshipType=10&api_key=" + wordnikKey;
}

function generateWord(word, type){
  loadJSON(generateWordnikLink(word, type), function(data){
    if(data[0] && data[0].words && data[0].words.length > 0){
      nextWord = data[0].words[floor(random(data[0].words.length))];
    }else{
      nextWord = words[floor(random(words.length))];
    }
    gifUrl = "http://api.giphy.com/v1/gifs/search?q=" + nextWord + "&api_key=8lARF0cgG0lY6ZMfZ6n2GEYcoHvXg4WX";
    // wordnik = generateWordnikLink(nextWord, type);
    loadJSON(gifUrl, generateGiphyFunction(type));
  });
}

function mouseReleased(){
  return false;
}

function touchEnded(){
  if(winMouseX > 3 * window.innerWidth / 4){
    imgIndex = 0;
    currentImgElement.elt.src = nextImgs[0].images.downsized.url;
    // currentP.elt.innerText = nextWord;
    currentP.elt.value = nextWord;
    imgs.push(nextImgs);
    words.push(nextWord);
    console.log(words);
    generateWord(nextWord, "synonym");
  }else if(winMouseX < window.innerWidth / 4){
    if(words.length > 1){
      words.pop();
      imgs.pop();
      imgIndex = 0;
    }
    currentImgElement.elt.src = imgs[imgs.length - 1][imgIndex].images.downsized.url;
    // currentP.elt.innerText = words[words.length - 1];
    currentP.elt.value = words[words.length - 1];
    generateWord(words[words.length - 1], "synonym");
  }else{
    if(imgIndex < imgs[imgs.length - 1].length - 1){
      imgIndex++;
    }else{
      imgIndex = 0;
    }
    currentImgElement.elt.src = imgs[imgs.length - 1][imgIndex].images.downsized.url;
  }
  // return false;
}



function keyPressed(){
  if(keyCode == RIGHT_ARROW){
    imgIndex = 0;
    currentImgElement.elt.src = nextImgs[0].images.downsized.url;
    // currentP.elt.innerText = nextWord;
    currentP.elt.value = nextWord;
    imgs.push(nextImgs);
    words.push(nextWord);
    console.log(words);
    generateWord(nextWord, "synonym");
  }else if(keyCode == LEFT_ARROW){
    if(words.length > 1){
      words.pop();
      imgs.pop();
      imgIndex = 0;
    }
    currentImgElement.elt.src = imgs[imgs.length - 1][imgIndex].images.downsized.url;
    // currentP.elt.innerText = words[words.length - 1];
    currentP.elt.value = words[words.length - 1];
    generateWord(words[words.length - 1], "synonym");
  }else if(keyCode == UP_ARROW){
    console.log("up");
  }else if(keyCode == DOWN_ARROW){
    console.log("down");
  }else if(keyCode == 32){
    if(imgIndex < imgs[imgs.length - 1].length - 1){
      imgIndex++;
    }else{
      imgIndex = 0;
    }
    currentImgElement.elt.src = imgs[imgs.length - 1][imgIndex].images.downsized.url;
  }else{
    console.log(keyCode);
  }
  // return false;
}

// function generateWord("synonym"){
//   loadJSON(wordUrl, function(data){
//     var prop = Object.keys(data)[0];
//     if(data[prop].syn.length > 0){
//       word = data[prop].syn[floor(random(data[prop].syn.length))];
//     }else{
//       word = words[floor(random(words.length))];
//     }
//     words.push(word);
//     console.log(words);
//     gifUrl = "http://api.giphy.com/v1/gifs/search?q=" + word + "&api_key=8lARF0cgG0lY6ZMfZ6n2GEYcoHvXg4WX";
//     wordUrl = "http://words.bighugelabs.com/api/2/231b88a8bccc758fd2a4b00e60d1361d/" + word + "/json";
//     loadJSON(gifUrl, gotData);
//   });
// }

// function gotData(giphy){
//   if(giphy.data.length > 0){
//     nextImg = giphy.data[0].images.downsized.url
//   }else{
//     generateWord(type);
//   }
// }

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJtYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzZWVkID0gXCJidWlsZGluZ1wiO1xuXG52YXIgZ2lmVXJsID0gXCJodHRwOi8vYXBpLmdpcGh5LmNvbS92MS9naWZzL3NlYXJjaD9xPVwiICsgc2VlZCArIFwiJmFwaV9rZXk9OGxBUkYwY2dHMGxZNlpNZlo2bjJHRVljb0h2WGc0V1hcIjtcbnZhciB3b3JkbmlrS2V5ID0gXCI0N2RjY2Y4YmU0NGQyN2UzM2UwMDAwOTVmYzAwODAwZDkxMDc3OWI4NjhlMTliMWRjXCI7XG4vLyB2YXIgd29yZG5payA9IFwiaHR0cDovL2FwaS53b3JkbmlrLmNvbTo4MC92NC93b3JkLmpzb24vXCIgKyBzZWVkICsgXCIvcmVsYXRlZFdvcmRzP3VzZUNhbm9uaWNhbD1mYWxzZSZyZWxhdGlvbnNoaXBUeXBlcz1zeW5vbnltJmxpbWl0UGVyUmVsYXRpb25zaGlwVHlwZT0xMCZhcGlfa2V5PVwiICsgd29yZG5pa0tleTtcblxudmFyIHdvcmRzID0gW107XG52YXIgaW1ncyA9IFtdO1xudmFyIGltZ0luZGV4ID0gMDtcblxudmFyIGN1cnJlbnRJbWdFbGVtZW50O1xudmFyIGN1cnJlbnRQO1xuXG52YXIgbmV4dEltZ3M7XG52YXIgbmV4dFdvcmQ7XG5cbmZ1bmN0aW9uIHNldHVwKCl7XG4gIG5vQ2FudmFzKCk7XG4gIGlmKHdpbmRvdy5sb2NhdGlvbi5oYXNoLmxlbmd0aCA+IDEpe1xuICAgIHNlZWQgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zbGljZSgxKTtcbiAgICBnaWZVcmwgPSBcImh0dHA6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvc2VhcmNoP3E9XCIgKyBzZWVkICsgXCImYXBpX2tleT04bEFSRjBjZ0cwbFk2Wk1mWjZuMkdFWWNvSHZYZzRXWFwiO1xuICB9XG4gIGxvYWRKU09OKGdpZlVybCwgZnVuY3Rpb24oZ2lwaHkpe1xuICAgIGN1cnJlbnRJbWdFbGVtZW50ID0gY3JlYXRlSW1nKGdpcGh5LmRhdGFbMF0uaW1hZ2VzLmRvd25zaXplZC51cmwpO1xuICAgIGN1cnJlbnRQID0gY3JlYXRlSW5wdXQoc2VlZCk7XG4gICAgY29uc29sZS5sb2coY3VycmVudFApO1xuICAgIGN1cnJlbnRQLmNoYW5nZWQoZnVuY3Rpb24oKXtcbiAgICAgIGN1cnJlbnRQLmVsdC5ibHVyKCk7XG4gICAgICBzZWVkID0gY3VycmVudFAuZWx0LnZhbHVlO1xuICAgICAgY29uc29sZS5sb2coXCJzZWVkOlwiLCBzZWVkKTtcbiAgICAgIGdpZlVybCA9IFwiaHR0cDovL2FwaS5naXBoeS5jb20vdjEvZ2lmcy9zZWFyY2g/cT1cIiArIHNlZWQgKyBcIiZhcGlfa2V5PThsQVJGMGNnRzBsWTZaTWZaNm4yR0VZY29IdlhnNFdYXCI7XG4gICAgICBpbWdzID0gW107XG4gICAgICB3b3JkcyA9IFtdO1xuICAgICAgaW1nSW5kZXggPSAwO1xuICAgICAgbG9hZEpTT04oZ2lmVXJsLCBmdW5jdGlvbihnaXBoeSl7XG4gICAgICAgIGlmKGdpcGh5LmRhdGEpe1xuICAgICAgICAgIGN1cnJlbnRJbWdFbGVtZW50LmVsdC5zcmMgPSBnaXBoeS5kYXRhWzBdLmltYWdlcy5kb3duc2l6ZWQudXJsO1xuICAgICAgICAgIHdvcmRzLnB1c2goc2VlZCk7XG4gICAgICAgICAgaW1ncy5wdXNoKGdpcGh5LmRhdGEpXG4gICAgICAgICAgZ2VuZXJhdGVXb3JkKHNlZWQsIFwic3lub255bVwiKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJ3ZSBmYWlsZWRcIik7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHdvcmRzLnB1c2goc2VlZCk7XG4gICAgaW1ncy5wdXNoKGdpcGh5LmRhdGEpXG4gICAgZ2VuZXJhdGVXb3JkKHNlZWQsIFwic3lub255bVwiKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlR2lwaHlGdW5jdGlvbih0eXBlKXtcbiAgcmV0dXJuIGZ1bmN0aW9uKGdpcGh5KXtcbiAgICBpZihnaXBoeS5kYXRhLmxlbmd0aCA+IDApe1xuICAgICAgbmV4dEltZ3MgPSBnaXBoeS5kYXRhXG4gICAgfWVsc2V7XG4gICAgICBnZW5lcmF0ZVdvcmQod29yZHNbd29yZHMubGVuZ3RoIC0gMV0sIHR5cGUpO1xuICAgIH1cbiAgfVxufVxuXG5cbi8qXG5cbiAgVE9ETzpcblxuICAtIHN0YXRpYyBkdXJpbmcgbG9hZGluZ1xuXG5cbiovXG5cblxuZnVuY3Rpb24gZ2VuZXJhdGVXb3JkbmlrTGluayh3b3JkLCB0eXBlKXtcbiAgcmV0dXJuIFwiaHR0cDovL2FwaS53b3JkbmlrLmNvbTo4MC92NC93b3JkLmpzb24vXCIgKyB3b3JkICsgXCIvcmVsYXRlZFdvcmRzP3VzZUNhbm9uaWNhbD1mYWxzZSZyZWxhdGlvbnNoaXBUeXBlcz1cIiArIHR5cGUgKyBcIiZsaW1pdFBlclJlbGF0aW9uc2hpcFR5cGU9MTAmYXBpX2tleT1cIiArIHdvcmRuaWtLZXk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlV29yZCh3b3JkLCB0eXBlKXtcbiAgbG9hZEpTT04oZ2VuZXJhdGVXb3JkbmlrTGluayh3b3JkLCB0eXBlKSwgZnVuY3Rpb24oZGF0YSl7XG4gICAgaWYoZGF0YVswXSAmJiBkYXRhWzBdLndvcmRzICYmIGRhdGFbMF0ud29yZHMubGVuZ3RoID4gMCl7XG4gICAgICBuZXh0V29yZCA9IGRhdGFbMF0ud29yZHNbZmxvb3IocmFuZG9tKGRhdGFbMF0ud29yZHMubGVuZ3RoKSldO1xuICAgIH1lbHNle1xuICAgICAgbmV4dFdvcmQgPSB3b3Jkc1tmbG9vcihyYW5kb20od29yZHMubGVuZ3RoKSldO1xuICAgIH1cbiAgICBnaWZVcmwgPSBcImh0dHA6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvc2VhcmNoP3E9XCIgKyBuZXh0V29yZCArIFwiJmFwaV9rZXk9OGxBUkYwY2dHMGxZNlpNZlo2bjJHRVljb0h2WGc0V1hcIjtcbiAgICAvLyB3b3JkbmlrID0gZ2VuZXJhdGVXb3JkbmlrTGluayhuZXh0V29yZCwgdHlwZSk7XG4gICAgbG9hZEpTT04oZ2lmVXJsLCBnZW5lcmF0ZUdpcGh5RnVuY3Rpb24odHlwZSkpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gbW91c2VSZWxlYXNlZCgpe1xuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHRvdWNoRW5kZWQoKXtcbiAgaWYod2luTW91c2VYID4gMyAqIHdpbmRvdy5pbm5lcldpZHRoIC8gNCl7XG4gICAgaW1nSW5kZXggPSAwO1xuICAgIGN1cnJlbnRJbWdFbGVtZW50LmVsdC5zcmMgPSBuZXh0SW1nc1swXS5pbWFnZXMuZG93bnNpemVkLnVybDtcbiAgICAvLyBjdXJyZW50UC5lbHQuaW5uZXJUZXh0ID0gbmV4dFdvcmQ7XG4gICAgY3VycmVudFAuZWx0LnZhbHVlID0gbmV4dFdvcmQ7XG4gICAgaW1ncy5wdXNoKG5leHRJbWdzKTtcbiAgICB3b3Jkcy5wdXNoKG5leHRXb3JkKTtcbiAgICBjb25zb2xlLmxvZyh3b3Jkcyk7XG4gICAgZ2VuZXJhdGVXb3JkKG5leHRXb3JkLCBcInN5bm9ueW1cIik7XG4gIH1lbHNlIGlmKHdpbk1vdXNlWCA8IHdpbmRvdy5pbm5lcldpZHRoIC8gNCl7XG4gICAgaWYod29yZHMubGVuZ3RoID4gMSl7XG4gICAgICB3b3Jkcy5wb3AoKTtcbiAgICAgIGltZ3MucG9wKCk7XG4gICAgICBpbWdJbmRleCA9IDA7XG4gICAgfVxuICAgIGN1cnJlbnRJbWdFbGVtZW50LmVsdC5zcmMgPSBpbWdzW2ltZ3MubGVuZ3RoIC0gMV1baW1nSW5kZXhdLmltYWdlcy5kb3duc2l6ZWQudXJsO1xuICAgIC8vIGN1cnJlbnRQLmVsdC5pbm5lclRleHQgPSB3b3Jkc1t3b3Jkcy5sZW5ndGggLSAxXTtcbiAgICBjdXJyZW50UC5lbHQudmFsdWUgPSB3b3Jkc1t3b3Jkcy5sZW5ndGggLSAxXTtcbiAgICBnZW5lcmF0ZVdvcmQod29yZHNbd29yZHMubGVuZ3RoIC0gMV0sIFwic3lub255bVwiKTtcbiAgfWVsc2V7XG4gICAgaWYoaW1nSW5kZXggPCBpbWdzW2ltZ3MubGVuZ3RoIC0gMV0ubGVuZ3RoIC0gMSl7XG4gICAgICBpbWdJbmRleCsrO1xuICAgIH1lbHNle1xuICAgICAgaW1nSW5kZXggPSAwO1xuICAgIH1cbiAgICBjdXJyZW50SW1nRWxlbWVudC5lbHQuc3JjID0gaW1nc1tpbWdzLmxlbmd0aCAtIDFdW2ltZ0luZGV4XS5pbWFnZXMuZG93bnNpemVkLnVybDtcbiAgfVxuICAvLyByZXR1cm4gZmFsc2U7XG59XG5cblxuXG5mdW5jdGlvbiBrZXlQcmVzc2VkKCl7XG4gIGlmKGtleUNvZGUgPT0gUklHSFRfQVJST1cpe1xuICAgIGltZ0luZGV4ID0gMDtcbiAgICBjdXJyZW50SW1nRWxlbWVudC5lbHQuc3JjID0gbmV4dEltZ3NbMF0uaW1hZ2VzLmRvd25zaXplZC51cmw7XG4gICAgLy8gY3VycmVudFAuZWx0LmlubmVyVGV4dCA9IG5leHRXb3JkO1xuICAgIGN1cnJlbnRQLmVsdC52YWx1ZSA9IG5leHRXb3JkO1xuICAgIGltZ3MucHVzaChuZXh0SW1ncyk7XG4gICAgd29yZHMucHVzaChuZXh0V29yZCk7XG4gICAgY29uc29sZS5sb2cod29yZHMpO1xuICAgIGdlbmVyYXRlV29yZChuZXh0V29yZCwgXCJzeW5vbnltXCIpO1xuICB9ZWxzZSBpZihrZXlDb2RlID09IExFRlRfQVJST1cpe1xuICAgIGlmKHdvcmRzLmxlbmd0aCA+IDEpe1xuICAgICAgd29yZHMucG9wKCk7XG4gICAgICBpbWdzLnBvcCgpO1xuICAgICAgaW1nSW5kZXggPSAwO1xuICAgIH1cbiAgICBjdXJyZW50SW1nRWxlbWVudC5lbHQuc3JjID0gaW1nc1tpbWdzLmxlbmd0aCAtIDFdW2ltZ0luZGV4XS5pbWFnZXMuZG93bnNpemVkLnVybDtcbiAgICAvLyBjdXJyZW50UC5lbHQuaW5uZXJUZXh0ID0gd29yZHNbd29yZHMubGVuZ3RoIC0gMV07XG4gICAgY3VycmVudFAuZWx0LnZhbHVlID0gd29yZHNbd29yZHMubGVuZ3RoIC0gMV07XG4gICAgZ2VuZXJhdGVXb3JkKHdvcmRzW3dvcmRzLmxlbmd0aCAtIDFdLCBcInN5bm9ueW1cIik7XG4gIH1lbHNlIGlmKGtleUNvZGUgPT0gVVBfQVJST1cpe1xuICAgIGNvbnNvbGUubG9nKFwidXBcIik7XG4gIH1lbHNlIGlmKGtleUNvZGUgPT0gRE9XTl9BUlJPVyl7XG4gICAgY29uc29sZS5sb2coXCJkb3duXCIpO1xuICB9ZWxzZSBpZihrZXlDb2RlID09IDMyKXtcbiAgICBpZihpbWdJbmRleCA8IGltZ3NbaW1ncy5sZW5ndGggLSAxXS5sZW5ndGggLSAxKXtcbiAgICAgIGltZ0luZGV4Kys7XG4gICAgfWVsc2V7XG4gICAgICBpbWdJbmRleCA9IDA7XG4gICAgfVxuICAgIGN1cnJlbnRJbWdFbGVtZW50LmVsdC5zcmMgPSBpbWdzW2ltZ3MubGVuZ3RoIC0gMV1baW1nSW5kZXhdLmltYWdlcy5kb3duc2l6ZWQudXJsO1xuICB9ZWxzZXtcbiAgICBjb25zb2xlLmxvZyhrZXlDb2RlKTtcbiAgfVxuICAvLyByZXR1cm4gZmFsc2U7XG59XG5cbi8vIGZ1bmN0aW9uIGdlbmVyYXRlV29yZChcInN5bm9ueW1cIil7XG4vLyAgIGxvYWRKU09OKHdvcmRVcmwsIGZ1bmN0aW9uKGRhdGEpe1xuLy8gICAgIHZhciBwcm9wID0gT2JqZWN0LmtleXMoZGF0YSlbMF07XG4vLyAgICAgaWYoZGF0YVtwcm9wXS5zeW4ubGVuZ3RoID4gMCl7XG4vLyAgICAgICB3b3JkID0gZGF0YVtwcm9wXS5zeW5bZmxvb3IocmFuZG9tKGRhdGFbcHJvcF0uc3luLmxlbmd0aCkpXTtcbi8vICAgICB9ZWxzZXtcbi8vICAgICAgIHdvcmQgPSB3b3Jkc1tmbG9vcihyYW5kb20od29yZHMubGVuZ3RoKSldO1xuLy8gICAgIH1cbi8vICAgICB3b3Jkcy5wdXNoKHdvcmQpO1xuLy8gICAgIGNvbnNvbGUubG9nKHdvcmRzKTtcbi8vICAgICBnaWZVcmwgPSBcImh0dHA6Ly9hcGkuZ2lwaHkuY29tL3YxL2dpZnMvc2VhcmNoP3E9XCIgKyB3b3JkICsgXCImYXBpX2tleT04bEFSRjBjZ0cwbFk2Wk1mWjZuMkdFWWNvSHZYZzRXWFwiO1xuLy8gICAgIHdvcmRVcmwgPSBcImh0dHA6Ly93b3Jkcy5iaWdodWdlbGFicy5jb20vYXBpLzIvMjMxYjg4YThiY2NjNzU4ZmQyYTRiMDBlNjBkMTM2MWQvXCIgKyB3b3JkICsgXCIvanNvblwiO1xuLy8gICAgIGxvYWRKU09OKGdpZlVybCwgZ290RGF0YSk7XG4vLyAgIH0pO1xuLy8gfVxuXG4vLyBmdW5jdGlvbiBnb3REYXRhKGdpcGh5KXtcbi8vICAgaWYoZ2lwaHkuZGF0YS5sZW5ndGggPiAwKXtcbi8vICAgICBuZXh0SW1nID0gZ2lwaHkuZGF0YVswXS5pbWFnZXMuZG93bnNpemVkLnVybFxuLy8gICB9ZWxzZXtcbi8vICAgICBnZW5lcmF0ZVdvcmQodHlwZSk7XG4vLyAgIH1cbi8vIH1cbiJdLCJmaWxlIjoibWFpbi5qcyJ9

//# sourceMappingURL=main.min.js.map
